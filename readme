This is the python implementation for the paper Joint Learning of Drug-Drug Combination and Drug-
Drug Interaction via Coupled Tensor-Tensor Factorization. (Under review for RECOMB 2025)

Abstract:
Targeted drug therapies are one of the promising approaches to treat
complex diseases and in such treatments, combinational drug therapies are adopted
to overcome drug resistance. However, in practice, unexpected drug interac-
tions may make drugs less effective, or even cause side effects. In this work,
we propose a novel approach for joint learning of drug-drug combination ther-
apies and drug-drug interactions using coupled tensor-tensor factorization. The
proposed method models drug combinations and potential adverse drug inter-
actions by encoding drug-drug-disease relationships and drug-drug interaction
side effects into three-way tensors. To overcome the challenge of recovering
incomplete and sparse tensors, our model utilizes auxiliary data such as drug
similarities and disease profiles within a multi-view learning framework. For
optimization, our model utilizes the Alternating Direction Method of Multipli-
ers (ADMM) to ensure convergence while managing non-negativity constraints.
To validate our approach, we compile a comprehensive dataset from multiple
data sources including DrugBank, PubChem, and DCDB. By leveraging drug
similarities from their chemical structures, side effects of individual drugs, drug
target information and drug inhibition information on cancer cell lines, the model
demonstrates robust and competitive results in joint prediction of drug-drug com-
binational therapies and adverse drug-drug interactions.

package requirement:
numpy                     1.24.3
torch                     1.11.0+cu115
pandas                    2.2.2
matplotlib                3.8.4
scikit-learn              1.4.2

How to Run:
1.We have three versions of the program:
ADMM_torch_fast_matrix: the original implementation in paper
ADMM_torch_fast: faster speed, worse prediciton performance
ADMM_torch: slower speed, better predicition performance

2.simply adjust the base_dir and save_dir and run the corresponding program

3. data folder contains the tensors and side information, output folder stores output.